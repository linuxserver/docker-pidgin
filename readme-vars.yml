---

# project information
project_name: pidgin
project_url: "https://pidgin.im/"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pidgin-logo.png"
project_blurb: "[Pidgin]({{ project_url }}) is a chat program which lets you log into accounts on multiple chat networks simultaneously. This means that you can be chatting with friends on XMPP and sitting in an IRC channel at the same time."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_blurb_optional_extras_enabled: false

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}

# development version
development_versions: false

# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_env: true
param_env_vars:
  - { env_var: "TZ", env_value: "Europe/London", desc: "Specify a timezone to use EG Europe/London." }
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "/path/to/config", desc: "Users home directory in the container, stores local files and settings" }
param_usage_include_ports: true
param_ports:
  - { external_port: "3000", internal_port: "3000", port_desc: "Pidgin desktop gui." }
  - { external_port: "3001", internal_port: "3001", port_desc: "Pidgin desktop gui HTTPS." }
opt_security_opt_param: true
opt_security_opt_param_vars:
  - { run_var: "seccomp=unconfined", compose_var: "seccomp:unconfined", desc: "For Docker Engine only, many modern gui apps need this to function on older hosts as syscalls are unknown to Docker." }

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  The application can be accessed at:

  * http://yourhost:3000/
  * https://yourhost:3001/
  
  This Pidgin installation comes with default chat plugins plus a series of third party ones. **Please note that the third party plugins for the most part are not simply plug and play, you will need to reference their documentation and possibly generate oauth tokens along with other workarounds**. Third party plugins are always in a state of constant development do not expect every single native feature to work flawlessly. To ease integration with some third party plugins we include Firefox in this image to allow you to fill out captchas or pre-auth before loading your credentials into the program, simply right click the desktop to launch it. 

  * Bonjour- Default XMPP style plugin
  * Discord- Provided by [purple-discord](https://github.com/EionRobb/purple-discord)
  * Facebook- Provided by [purple-facebook](https://github.com/dequis/purple-facebook)
  * Gadu-Gadu- Default libgadu plugin
  * Google Talk- Provided by [purple-hangouts](https://github.com/EionRobb/purple-hangouts)
  * GroupWise- Default GroupWise plugin
  * Hangouts- Provided by [purple-hangouts](https://github.com/EionRobb/purple-hangouts)
  * ICQ (WIM)- Provided by [icyque](https://github.com/EionRobb/icyque)
  * IRC- Default IRC plugin
  * Instagram- Provided by [purple-instagram](https://github.com/EionRobb/purple-instagram)
  * Office Comminicator (SIPE)- Provided by [SIPE Project](https://sipe.sourceforge.io/)
  * Rocket.chat- Provided by [purple-rocketchat](https://github.com/EionRobb/purple-rocketchat)
  * SIMPLE- Default plugin
  * Skype (HTTP)- Provided by [skype4pidgin](https://github.com/EionRobb/skype4pidgin)
  * Slack- Provided by [slack-libpurple](https://github.com/EionRobb/slack-libpurple)
  * Telegram- Provided by [telegram-purple](https://github.com/majn/telegram-purple)
  * XMPP- Default XMPP plugin
  * Zephyr- Default project Athena plugin
  
  ### Options in all KasmVNC based GUI containers

  This container is based on [Docker Baseimage KasmVNC](https://github.com/linuxserver/docker-baseimage-kasmvnc) which means there are additional environment variables and run configurations to enable or disable specific functionality.

  #### Optional environment variables

  | Variable | Description |
  | :----: | --- |
  | CUSTOM_PORT | Internal port the container listens on for http if it needs to be swapped from the default 3000. |
  | CUSTOM_HTTPS_PORT | Internal port the container listens on for https if it needs to be swapped from the default 3001. |
  | CUSTOM_USER | HTTP Basic auth username, abc is default. |
  | PASSWORD | HTTP Basic auth password, abc is default. If unset there will be no auth |
  | SUBFOLDER | Subfolder for the application if running a subfolder reverse proxy, need both slashes IE `/subfolder/` |
  | TITLE | The page title displayed on the web browser, default "KasmVNC Client". |
  | FM_HOME | This is the home directory (landing) for the file manager, default "/config". |
  | START_DOCKER | If set to false a container with privilege will not automatically start the DinD Docker setup. |
  | DRINODE | If mounting in /dev/dri for [DRI3 GPU Acceleration](https://www.kasmweb.com/kasmvnc/docs/master/gpu_acceleration.html) allows you to specify the device to use IE `/dev/dri/renderD128` |

  #### Optional run configurations

  | Variable | Description |
  | :----: | --- |
  | `--privileged` | Will start a Docker in Docker (DinD) setup inside the container to use docker in an isolated environment. For increased performance mount the Docker directory inside the container to the host IE `-v /home/user/docker-data:/var/lib/docker`. |
  | `-v /var/run/docker.sock:/var/run/docker.sock` | Mount in the host level Docker socket to either interact with it via CLI or use Docker enabled applications. |
  | `--device /dev/dri:/dev/dri` | Mount a GPU into the container, this can be used in conjunction with the `DRINODE` environment variable to leverage a host video card for GPU accelerated appplications. Only **Open Source** drivers are supported IE (Intel,AMDGPU,Radeon,ATI,Nouveau) |

  ### Lossless mode

  This container is capable of delivering a true lossless image at a high framerate to your web browser by changing the Stream Quality preset to "Lossless", more information [here](https://www.kasmweb.com/docs/latest/how_to/lossless.html#technical-background). In order to use this mode from a non localhost endpoint the HTTPS port on 3001 needs to be used. If using a reverse proxy to port 3000 specific headers will need to be set as outlined [here](https://github.com/linuxserver/docker-baseimage-kasmvnc#lossless).

# changelog
changelogs:
  - { date: "02.01.24:", desc: "Rebase to Alpine 3.19." }
  - { date: "13.05.23:", desc: "Rebase to Alpine 3.18." }
  - { date: "18.03.23:", desc: "Rebase to KasmVNC base image." }
  - { date: "21.10.22:", desc: "Rebase to Alpine 3.16, migrate to s6v3." }
  - { date: "15.02.22:", desc: "Add build deps for discord." }
  - { date: "23.12.21:", desc: "Rebase to Alpine 3.15." }
  - { date: "26.09.21:", desc: "Rebase to Alpine 3.14." }
  - { date: "14.05.21:", desc: "Initial release." }
